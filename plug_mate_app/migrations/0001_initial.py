# Generated by Django 3.0.8 on 2020-08-12 18:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meters',
            fields=[
                ('meter_id', models.IntegerField(primary_key=True, serialize=False)),
                ('meter_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'meters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PointsWallet',
            fields=[
                ('user', models.IntegerField(primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
            ],
            options={
                'db_table': 'points_wallet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PowerEnergyConsumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('unix_time', models.BigIntegerField()),
                ('energy', models.FloatField()),
                ('power', models.FloatField()),
                ('device_state', models.IntegerField()),
                ('device_type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'power_energy_consumption',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('unix_time', models.BigIntegerField()),
                ('rssi', models.FloatField()),
                ('presence', models.IntegerField()),
            ],
            options={
                'db_table': 'presence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=255)),
                ('mac_address', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AchievementsBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('tree_first', models.IntegerField()),
                ('tree_fifth', models.IntegerField()),
                ('tree_tenth', models.IntegerField()),
                ('redeem_reward', models.IntegerField()),
                ('first_remote', models.IntegerField()),
                ('first_schedule', models.IntegerField()),
                ('first_presence', models.IntegerField()),
            ],
            options={
                'db_table': 'achievements_bonus',
            },
        ),
        migrations.CreateModel(
            name='AchievementsWeekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('cost_saving', models.IntegerField()),
                ('schedule_based', models.IntegerField()),
                ('complete_daily', models.IntegerField()),
                ('complete_weekly', models.IntegerField()),
            ],
            options={
                'db_table': 'achievements_weekly',
            },
        ),
        migrations.CreateModel(
            name='PresenceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('device_type', models.CharField(max_length=100)),
                ('presence_setting', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RemoteData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('device_type', models.CharField(max_length=100)),
                ('device_state', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('event_start', models.CharField(max_length=100)),
                ('event_end', models.CharField(max_length=100)),
                ('event_name', models.CharField(max_length=100)),
                ('event_rrule', models.CharField(max_length=100)),
                ('device_type_id', models.IntegerField()),
                ('device_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
